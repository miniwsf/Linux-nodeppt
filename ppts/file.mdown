[slide] 
# 文件目录管理
# 用户和用户组管理
# 软件包管理

[slide]
## 建立文件和目录
----

> mkdir:Make directory  建立目录  
> touch:  建立空文件  
<pre><code class="markdown">
mkdir 目录名  目录名 ......  /* 可以一次建立一个或多个目录 */
mkdir 绝对路径  /* 使用绝对路径建立目录 eg：mkdir ~/photo/index  */
mkdir -p 绝对路径  /* 完整的创建一个子目录结构 */
...
</code>
</pre>
![建立文件和目录](/img/1.png)

[slide]
## 移动、复制、删除
----

> mv:Move File  移动文件  
> cp:Copy File  复制文件和目录  
> rmdir:Remove Directory  删除目录  
> rm:Remove File 删除文件  

<pre><code class="markdown">
mv 目录名/文件名 目标目录名 /* 注意：会将目标目录下面的同名文件覆盖 */
mv -i 目录名/文件名 目标目录名 /* 提示是否覆盖（Y/N）*/
mv -b 目录名/文件名 目标目录名 /* 在目标目录的同名文件后加~，避免覆盖 */
mv hello hello2 /* 文件在同一个目录下面里移动，实现重命名 */

cp 待复制文件名 目标目录名 /* 注意：会将目标目录下面的同名文件覆盖 */
cp -i 待复制文件名 目标目录名 /* 提示是否覆盖（Y/N）*/
cp -b 待复制文件名 目标目录名 /* 在目标目录的同名文件后加~，避免覆盖 */
cp -r 待复制目录名 目标目录名 /* 将子目录连同其中的文件一起复制到目标目录下 */

rmdir 待删除目录名 /* 只能删除空目录 */
rm 待删除文件名 /* 直接将文件永久删除（只读文件会提示是否删除） */
rm -i 待删除文件名 /* 提示是否删除（Y/N） */
rm -f 待删除文件名 /* 避免交互性操作，自动回到Y */
rm -r 待删除目录名 /* 递归删除所有文件及其子目录 */
...
</code>
</pre>

[slide]
## 移动、复制、删除
----

![删除](/img/2.png)
![复制](/img/3.png)

[slide]
## 文件目录和权限
----
* 权限设置用户分类  
>文件所有者-属主（u）、文件属组用户（g）和其他人（o）（除属主和属组外的其他用户）      

* 权限分类  
>读（r-4）、写（w-2）、执行（x-1）

[slide]
## 查看权限、修改权限
----
>ls:List File  列出文件  
>chown:Change owner  改变所有者  
>chgrp:Change group  改变用户组  
>chmod:Change mode 改变模式

<pre><code class="markdown">
ls -l 文件名 /* 查看文件属性包括权限 */
ls -d 目录名 /* 查看目录属性包括权限 */

chown [属主]:[属组] 文件名 /* 改变文件所有权 */
chown -R [属主]:[属组] 目录 /* 改变一个目录及其下面所有文件和子目录的所有权 */

chgrp 属组 文件名 /* 设置文件属组 */
chgrp -R 属组 目录 /* 设置目录及其子目录的属组 */
...
</code>
</pre>

[slide]
## 查看权限、修改权限
----
![文件类型](/img/4.png)
![权限](/img/5.png)

[slide]
## 文件类型
----
* Linux文件类型
>普通文件（-），目录（d），字符设备文件（c），块设备文件（b），本地域套接口（s），有名管道（p），符号链接（l） 

* 文件链接     
>ln:Link files 链接文件
<pre><code class="markdown">
ln -s 目标文件 别名 /* 符号链接（软链接） */
ln 目标文件 别名 /* 保留原文件内容 */
...
</code>
</pre>
![权限](/img/8.png)
[slide]
## 输入输出重定向
----

<pre><code class="markdown">
ls > 目标文件名 /* 将ls的输出重定向到目标文件下，直接覆盖目标文件的原内容 */
ls >> 目标文件名 /* 硬链接，直接引用 */

cat < 目标文件名 /* 从目标文件中获取输入，遇到命令结束符之后停止读取 */
...
</code>
</pre>
![权限](/img/7.png)

[slide]
## 管道
----
* 管道
>管道将“重定向”再向前推进了一步。通过一根竖线“|”，将一条命令的输出连接到另一条命令输入。

[slide]
## 用户和用户组管理
----

[slide]
## 添加、删除用户
----
* passwd和shadow文件
>所有用户信息存储在/etc/passwd，用户的登录密码保存在/etc/shadow文件

<pre><code class="markdown">
useradd 用户名 /* 添加用户 */
useradd -g 用户组 用户名 /* 指定用户所属的组 */
passwd 用户名 /* 设置用户口令 */

userdel 用户名 /* 删除用户账号 */
userdel -r 用户名 /* 删除用户账号及其主目录 */
</code>
</pre>

[slide]
## 
----
![权限](/img/9.png)
![权限](/img/10.png)

[slide]
## 管理用户账号
----

<pre><code class="markdown">
usermod -d 主目录 用户名 /* 修改账号主目录 */
usermod -e 有效时间 用户名 /* 修改账号的有效时间 */
usermod -g 用户组名 用户名 /* 修改用户所属组 */
usermod -l 新账号名称 用户名 /* 修改账号名称 */
</code>
</pre>

[slide]
## 查看用户信息
----

<pre><code class="markdown">
id 用户名 /* 查看用户的UID（User Identification，用户身份证明）、GID（Group Identification，群体身份）以及所属组 */
id /* 查看当前登录用户的信息id */
</code>
</pre>

[slide]
## 用户间的切换
----
>su:Swith user 切换用户
>sudo:Superuser do(可以接受命令行为参数，以root身份运行)

<pre><code class="markdown">
su 用户名 /* 切换用户 */
</code>
</pre>
![权限](/img/12.png)

[slide]
## 记录用户操作
----

<pre><code class="markdown">
history /* 看到当前用户曾经执行的命令（.bash_history存储使用过的命令） */
history n /* 列出当前用户最近几次输入的命令 */
</code>
</pre>


[slide]
## 软件包管理
----
* 软件包概念
>将应用程序、配置文件和管理数据打包的产物。

[slide]
## 管理.deb软件包
----
>dpkg:Debian package

<pre><code class="markdown">
dpkg --install/-i /* 安装软件包 */
dpkg --remove/-r /* 卸载软件包 */
...
</code>
</pre>

[slide]
## 管理RPM软件包
----
>rpm:RPM Package Manager

<pre><code class="markdown">
rpm -i -v -h 软件包名字 /* -v、-h可选，其中-v：显示rpm当前正在执行的工作，-h通过打印一系列的“#”提醒用户当前安装进度 */
rpm -U -v -h 软件包名字 /* 升级软件包 */
rpm -q 软件包名字 /* 查看已安装的软件包 */
rpm -qa /* 列出当前系统已经安装的所有软件包 */
rpm -e 软件包名字 /* 卸载软件包 */
...
</code>
</pre>

[slide]
## 高级软件包工具
----

* APT
>全称为Advanced Package Tool，可以自动检测软件依赖问题，下载和安装所有文件；甚至只需要一条命令，就可以更新整个系统上的所有软件包。

<pre><code class="markdown">
apt-get update /* 更新当前apt-get缓存中的软件包信息 */
apt-get install 软件包名字 /* 下载并安装软件包 */
apt-get upgrade /* 下载并安装在本系统已有的软件包的最新版本 */
apt-get remove 软件包名字 /* 卸载特定的软件包 */
apt-get source 软件包名字 /* 下载特定的软件包源代码 */
apt-get clear /* 删除所有已下载的软件包 */
apt-get search 软件包名字 /* 搜索软件包列表中特定的软件包 */
apt-get depends 软件包名字 /* 列出特定软件包的依赖关系 */
</code>
</pre>


